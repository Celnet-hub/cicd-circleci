---
  - name: "show remote environment"
    shell: env
  - name: Make backend-app directory
    file:
      path: /home/ubuntu/backend-app
      state: directory

  # extract the tar/zipped file
  - name: 'extract the tar/zipped file'
    unarchive:
      src: ~/project/artifact.tar.gz
      dest: /home/ubuntu/backend-app

  - name: "copy artifact to ec2"
    become: yes
    synchronize:
      src: ~/project/artifact.tar.gz
      dest: /home/ubuntu
      recursive: true

  - name: "Update packages."
    become: true
    apt:
      update_cache: yes

  - name: "upgrade packages."
    become: true
    apt:
      upgrade: "yes"

  - name: "install dependencies."
    become: true
    apt:
      name: ["nodejs", "npm"]
      state: latest
      update_cache: yes

  - name: "install pm2"
    become: true
    npm:
      name: pm2
      global: yes
      production: yes
      state: present
  
  # install backend dependencies
  - name: 'install backend-app dependencies'
    become: true
    shell: |
      cd /home/ubuntu/backend-app
      npm install

  - name: 'start the app'
    become: true
    shell: |
      cd /home/ubuntu/backend-app
      pm2 stop default
      pm2 start npm -- start
    register: backend_app 

    environment:
      NODE_ENV: production
      VERSION: production
      ENVIRONMENT: production
      TYPEORM_CONNECTION: postgres
      TYPEORM_MIGRATIONS_DIR: "/home/ubuntu/backend-app/dist/migrations"
      TYPEORM_MIGRATIONS: "/home/ubuntu/backend-app/dist/migrations/*.js"
      TYPEORM_ENTITIES: "/home/ubuntu/backend-app/dist/modules/domain/**/*.entity{.ts,.js}"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}" 
