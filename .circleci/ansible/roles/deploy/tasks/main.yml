--- 
- 
  apt: 
    update_cache: true
  become: true
  name: "update local apt repo."
- 
  apt: 
    upgrade: true
  become: true
  name: "upgrade apt packages"
- 
  apt: 
    autoremove: true
  become: true
  name: "remove stale dependecies"
- 
  apt: 
    pkg: 
      - nodejs
      - npm
  become: true
  name: "install dependencies [nodejs and npm]"
- 
  npm: 
    name: pm2
    global: yes
    production: yes
    state: present
    update_cache: true
  become: true
  name: "install pm2"
- 
  become: true
  connection: local
  name: "install rsync on the ansible controller"
  package: 
    name: 
      - openssh
      - rsync
    state: present
- 
  file: 
    path: ~/backend_app
    state: directory
  name: "Create Backend App Directory"
- 
  become: true
  copy: 
    dest: /home/ubuntu/backend_app/artifact.tar.gz
    src: ~/project/artifact.tar.gz
  name: "copy the artifacts into the Backend Instance"
- 
  become: true
    environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: postgres
      TYPEORM_MIGRATIONS_DIR: "/home/ubuntu/dist/migrations"
      TYPEORM_MIGRATIONS: "/home/ubuntu/dist/migrations/*.js"
      TYPEORM_ENTITIES: "/home/ubuntu/dist/modules/domain/**/*.entity{.ts,.js}"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
  name: "run server"
  shell: |
      cd /home/ubuntu/backend_app
      tar xzvf artifact.tar.gz
      npm install
      npm run build
      pm2 stop all
      pm2 start npm -- start
  args:
      chdir: /home/ubuntu/dist
